!-*-f90-*-
!
!  Interfaces: Special Functions
!

   
 
  


 


     function fgsl_sf_gegenpoly_1(lambda, x) bind(c, name='gsl_sf_gegenpoly_1')
       import
       real(c_double), value :: lambda, x
       real(c_double) :: fgsl_sf_gegenpoly_1
     end function fgsl_sf_gegenpoly_1
     function gsl_sf_gegenpoly_1_e(lambda, x, result) bind(c)
       import
       real(c_double), value :: lambda, x
       type(gsl_sf_result) :: result
       integer(c_int) :: gsl_sf_gegenpoly_1_e
     end function gsl_sf_gegenpoly_1_e
     function fgsl_sf_gegenpoly_2(lambda, x) bind(c, name='gsl_sf_gegenpoly_2')
       import
       real(c_double), value :: lambda, x
       real(c_double) :: fgsl_sf_gegenpoly_2
     end function fgsl_sf_gegenpoly_2
     function gsl_sf_gegenpoly_2_e(lambda, x, result) bind(c)
       import
       real(c_double), value :: lambda, x
       type(gsl_sf_result) :: result
       integer(c_int) :: gsl_sf_gegenpoly_2_e
     end function gsl_sf_gegenpoly_2_e
     function fgsl_sf_gegenpoly_3(lambda, x) bind(c, name='gsl_sf_gegenpoly_3')
       import
       real(c_double), value :: lambda, x
       real(c_double) :: fgsl_sf_gegenpoly_3
     end function fgsl_sf_gegenpoly_3
     function gsl_sf_gegenpoly_3_e(lambda, x, result) bind(c)
       import
       real(c_double), value :: lambda, x
       type(gsl_sf_result) :: result
       integer(c_int) :: gsl_sf_gegenpoly_3_e
     end function gsl_sf_gegenpoly_3_e
     function fgsl_sf_gegenpoly_n(n, lambda, x) bind(c, name='gsl_sf_gegenpoly_n')
       import
       integer(c_int), value :: n
       real(c_double), value :: lambda, x
       real(c_double) :: fgsl_sf_gegenpoly_n
     end function fgsl_sf_gegenpoly_n
     function gsl_sf_gegenpoly_n_e(n, lambda, x, result) bind(c)
       import
       integer(c_int), value :: n
       real(c_double), value :: lambda, x
       type(gsl_sf_result) :: result
       integer(c_int) :: gsl_sf_gegenpoly_n_e
     end function gsl_sf_gegenpoly_n_e
     function gsl_sf_gegenpoly_array(nmax, lambda, x, result_array) bind(c)
       import
       integer(c_int), value :: nmax
       real(c_double), value :: lambda, x
       type(c_ptr), value :: result_array
       integer(c_int) :: gsl_sf_gegenpoly_array
     end function gsl_sf_gegenpoly_array
! hermite
     function fgsl_sf_hermite(n, x) bind(c, name='gsl_sf_hermite') 
       import
       integer(c_int), value :: n
       real(c_double), value :: x
       real(c_double) :: fgsl_sf_hermite
     end function fgsl_sf_hermite
     function fgsl_sf_hermite_deriv(m, n, x) &
          bind(c, name='gsl_sf_hermite_deriv') 
       import
       integer(c_int), value :: m, n
       real(c_double), value :: x
       real(c_double) :: fgsl_sf_hermite_deriv
     end function fgsl_sf_hermite_deriv
     function gsl_sf_hermite_deriv_e(m, n, x, result) bind(c)
       import
       integer(c_int), value :: m, n
       real(c_double), value :: x
       type(gsl_sf_result), intent(inout) :: result
       integer(c_int) :: gsl_sf_hermite_deriv_e
     end function gsl_sf_hermite_deriv_e
     function fgsl_sf_hermite_prob(n, x) bind(c, name='gsl_sf_hermite_prob') 
       import
       integer(c_int), value :: n
       real(c_double), value :: x
       real(c_double) :: fgsl_sf_hermite_prob
     end function fgsl_sf_hermite_prob
     function fgsl_sf_hermite_prob_deriv(m, n, x) &
          bind(c, name='gsl_sf_hermite_prob_deriv') 
       import
       integer(c_int), value :: m, n
       real(c_double), value :: x
       real(c_double) :: fgsl_sf_hermite_prob_deriv
     end function fgsl_sf_hermite_prob_deriv
     function gsl_sf_hermite_prob_e(n, x, result) bind(c)
       import
       integer(c_int), value :: n
       real(c_double), value :: x
       type(gsl_sf_result), intent(inout) :: result
       integer(c_int) :: gsl_sf_hermite_prob_e
     end function gsl_sf_hermite_prob_e
     function gsl_sf_hermite_prob_deriv_e(m, n, x, result) bind(c)
       import
       integer(c_int), value :: m, n
       real(c_double), value :: x
       type(gsl_sf_result), intent(inout) :: result
       integer(c_int) :: gsl_sf_hermite_prob_deriv_e
     end function gsl_sf_hermite_prob_deriv_e
     function fgsl_sf_hermite_prob_array(nmax, x, result_array) &
          bind(c, name='gsl_sf_hermite_prob_array') 
       import
       integer(c_int), value :: nmax
       real(c_double), value :: x
       real(c_double), intent(inout), dimension(*) :: result_array
       integer(c_int) :: fgsl_sf_hermite_prob_array
     end function fgsl_sf_hermite_prob_array
     function fgsl_sf_hermite_prob_series(n, x, a) &
          bind(c, name='gsl_sf_hermite_prob_series') 
       import
       integer(c_int), value :: n
       real(c_double), value :: x
       real(c_double), dimension(*), intent(in)  :: a
       real(c_double) :: fgsl_sf_hermite_prob_series
     end function fgsl_sf_hermite_prob_series
     function gsl_sf_hermite_prob_series_e(n, x, a, result) bind(c)
       import
       integer(c_int), value :: n
       real(c_double), value :: x
       real(c_double), dimension(*), intent(in) :: a
       type(gsl_sf_result), intent(inout) :: result
       integer(c_int) :: gsl_sf_hermite_prob_series_e
     end function gsl_sf_hermite_prob_series_e
     function fgsl_sf_hermite_phys(n, x) bind(c, name='gsl_sf_hermite_phys') 
       import
       integer(c_int), value :: n
       real(c_double), value :: x
       real(c_double) :: fgsl_sf_hermite_phys
     end function fgsl_sf_hermite_phys
     function gsl_sf_hermite_e(n, x, result) bind(c)
       import
       integer(c_int), value :: n
       real(c_double), value :: x
       type(gsl_sf_result), intent(inout) :: result
       integer(c_int) :: gsl_sf_hermite_e
     end function gsl_sf_hermite_e
     function gsl_sf_hermite_phys_e(n, x, result) bind(c)
       import
       integer(c_int), value :: n
       real(c_double), value :: x
       type(gsl_sf_result), intent(inout) :: result
       integer(c_int) :: gsl_sf_hermite_phys_e
     end function gsl_sf_hermite_phys_e
     function fgsl_sf_hermite_array(nmax, x, result_array) &
          bind(c, name='gsl_sf_hermite_array') 
       import
       integer(c_int), value :: nmax
       real(c_double), value :: x
       real(c_double), intent(inout), dimension(*) :: result_array
       integer(c_int) :: fgsl_sf_hermite_array
     end function fgsl_sf_hermite_array
     function fgsl_sf_hermite_array_deriv(m, nmax, x, result_array) &
          bind(c, name='gsl_sf_hermite_array_deriv') 
       import
       integer(c_int), value :: m, nmax
       real(c_double), value :: x
       real(c_double), intent(inout), dimension(*) :: result_array
       integer(c_int) :: fgsl_sf_hermite_array_deriv
     end function fgsl_sf_hermite_array_deriv
     function fgsl_sf_hermite_deriv_array(mmax, n, x, result_array) &
          bind(c, name='gsl_sf_hermite_deriv_array') 
       import
       integer(c_int), value :: mmax, n
       real(c_double), value :: x
       real(c_double), intent(inout), dimension(*) :: result_array
       integer(c_int) :: fgsl_sf_hermite_deriv_array
     end function fgsl_sf_hermite_deriv_array
     function fgsl_sf_hermite_prob_array_deriv(m, nmax, x, result_array) &
          bind(c, name='gsl_sf_hermite_prob_array_deriv') 
       import
       integer(c_int), value :: m, nmax
       real(c_double), value :: x
       real(c_double), intent(inout), dimension(*) :: result_array
       integer(c_int) :: fgsl_sf_hermite_prob_array_deriv
     end function fgsl_sf_hermite_prob_array_deriv
     function fgsl_sf_hermite_prob_deriv_array(mmax, n, x, result_array) &
          bind(c, name='gsl_sf_hermite_prob_deriv_array') 
       import
       integer(c_int), value :: mmax, n
       real(c_double), value :: x
       real(c_double), intent(inout), dimension(*) :: result_array
       integer(c_int) :: fgsl_sf_hermite_prob_deriv_array
     end function fgsl_sf_hermite_prob_deriv_array
     function fgsl_sf_hermite_zero(n, s) bind(c, name='gsl_sf_hermite_zero') 
       import
       integer(c_int), value :: n, s
       real(c_double) :: fgsl_sf_hermite_zero
     end function fgsl_sf_hermite_zero
	 function gsl_sf_hermite_zero_e(n, s, result) bind(c)
       import
       integer(c_int), value :: n, s
       type(gsl_sf_result), intent(inout) :: result
       integer(c_int) :: gsl_sf_hermite_zero_e
     end function gsl_sf_hermite_zero_e
     function fgsl_sf_hermite_prob_zero(n, s) bind(c, name='gsl_sf_hermite_prob_zero') 
       import
       integer(c_int), value :: n, s
       real(c_double) :: fgsl_sf_hermite_prob_zero
     end function fgsl_sf_hermite_prob_zero
	 function gsl_sf_hermite_prob_zero_e(n, s, result) bind(c)
       import
       integer(c_int), value :: n, s
       type(gsl_sf_result), intent(inout) :: result
       integer(c_int) :: gsl_sf_hermite_prob_zero_e
     end function gsl_sf_hermite_prob_zero_e

     function fgsl_sf_hermite_phys_array(nmax, x, result_array) &
          bind(c, name='gsl_sf_hermite_phys_array') 
       import
       integer(c_int), value :: nmax
       real(c_double), value :: x
       real(c_double), intent(inout), dimension(*) :: result_array
       integer(c_int) :: fgsl_sf_hermite_phys_array
     end function fgsl_sf_hermite_phys_array
     function fgsl_sf_hermite_series(n, x, a) &
          bind(c, name='gsl_sf_hermite_series') 
       import
       integer(c_int), value :: n
       real(c_double), value :: x
       real(c_double), dimension(*), intent(in)  :: a
       real(c_double) :: fgsl_sf_hermite_series
     end function fgsl_sf_hermite_series
     function fgsl_sf_hermite_phys_series(n, x, a) &
          bind(c, name='gsl_sf_hermite_phys_series') 
       import
       integer(c_int), value :: n
       real(c_double), value :: x
       real(c_double), dimension(*), intent(in)  :: a
       real(c_double) :: fgsl_sf_hermite_phys_series
     end function fgsl_sf_hermite_phys_series
     function gsl_sf_hermite_phys_series_e(n, x, a, result) bind(c)
       import
       integer(c_int), value :: n
       real(c_double), value :: x
       real(c_double), dimension(*), intent(in) :: a
       type(gsl_sf_result), intent(inout) :: result
       integer(c_int) :: gsl_sf_hermite_phys_series_e
     end function gsl_sf_hermite_phys_series_e
     function gsl_sf_hermite_series_e(n, x, a, result) bind(c)
       import
       integer(c_int), value :: n
       real(c_double), value :: x
       real(c_double), dimension(*), intent(in) :: a
       type(gsl_sf_result), intent(inout) :: result
       integer(c_int) :: gsl_sf_hermite_series_e
     end function gsl_sf_hermite_series_e
     function fgsl_sf_hermite_func(n, x) bind(c, name='gsl_sf_hermite_func') 
       import
       integer(c_int), value :: n
       real(c_double), value :: x
       real(c_double) :: fgsl_sf_hermite_func
     end function fgsl_sf_hermite_func
     function gsl_sf_hermite_func_e(n, x, result) bind(c)
       import
       integer(c_int), value :: n
       real(c_double), value :: x
       type(gsl_sf_result), intent(inout) :: result
       integer(c_int) :: gsl_sf_hermite_func_e
     end function gsl_sf_hermite_func_e
     function fgsl_sf_hermite_func_fast(n, x) bind(c, name='gsl_sf_hermite_func_fast') 
       import
       integer(c_int), value :: n
       real(c_double), value :: x
       real(c_double) :: fgsl_sf_hermite_func_fast
     end function fgsl_sf_hermite_func_fast
     function gsl_sf_hermite_func_fast_e(n, x, result) bind(c)
       import
       integer(c_int), value :: n
       real(c_double), value :: x
       type(gsl_sf_result), intent(inout) :: result
       integer(c_int) :: gsl_sf_hermite_func_fast_e
     end function gsl_sf_hermite_func_fast_e
     function fgsl_sf_hermite_func_array(nmax, x, result_array) &
          bind(c, name='gsl_sf_hermite_func_array') 
       import
       integer(c_int), value :: nmax
       real(c_double), value :: x
       real(c_double), intent(inout), dimension(*) :: result_array
       integer(c_int) :: fgsl_sf_hermite_func_array
     end function fgsl_sf_hermite_func_array
     function fgsl_sf_hermite_func_series(n, x, a) &
          bind(c, name='gsl_sf_hermite_func_series') 
       import
       integer(c_int), value :: n
       real(c_double), value :: x
       real(c_double), dimension(*), intent(in)  :: a
       real(c_double) :: fgsl_sf_hermite_func_series
     end function fgsl_sf_hermite_func_series
     function gsl_sf_hermite_func_series_e(n, x, a, result) bind(c)
       import
       integer(c_int), value :: n
       real(c_double), value :: x
       real(c_double), dimension(*), intent(in) :: a
       type(gsl_sf_result), intent(inout) :: result
       integer(c_int) :: gsl_sf_hermite_func_series_e
     end function gsl_sf_hermite_func_series_e
!! hypergeometric
     function fgsl_sf_hyperg_0f1(c, x) bind(c, name='gsl_sf_hyperg_0F1')
       import
       real(c_double), value :: c, x
       real(c_double) :: fgsl_sf_hyperg_0F1
     end function fgsl_sf_hyperg_0f1
     function gsl_sf_hyperg_0f1_e(c, x, result) bind(c, name='gsl_sf_hyperg_0F1_e')
       import
       real(c_double), value :: c, x
       type(gsl_sf_result) :: result
       integer(c_int) :: gsl_sf_hyperg_0F1_e
     end function gsl_sf_hyperg_0f1_e
     function fgsl_sf_hyperg_1f1_int(m, n, x) bind(c, name='gsl_sf_hyperg_1F1_int')
       import
       integer(c_int), value :: m, n
       real(c_double), value :: x
       real(c_double) :: fgsl_sf_hyperg_1F1_int
     end function fgsl_sf_hyperg_1f1_int
     function gsl_sf_hyperg_1f1_int_e(m, n, x, result) bind(c, name='gsl_sf_hyperg_1F1_int_e')
       import
       integer(c_int), value :: m, n
       real(c_double), value :: x
       type(gsl_sf_result) :: result
       integer(c_int) :: gsl_sf_hyperg_1F1_int_e
     end function gsl_sf_hyperg_1f1_int_e
     function fgsl_sf_hyperg_1f1(a, b, x) bind(c, name='gsl_sf_hyperg_1F1')
       import
       real(c_double), value :: a, b, x
       real(c_double) :: fgsl_sf_hyperg_1f1
     end function fgsl_sf_hyperg_1f1
     function gsl_sf_hyperg_1f1_e(a, b, x, result) bind(c, name='gsl_sf_hyperg_1F1_e')
       import
       real(c_double), value :: a, b, x
       type(gsl_sf_result) :: result
       integer(c_int) :: gsl_sf_hyperg_1f1_e
     end function gsl_sf_hyperg_1f1_e
     function fgsl_sf_hyperg_u_int(m, n, x) bind(c, name='gsl_sf_hyperg_U_int')
       import
       integer(c_int), value :: m, n
       real(c_double), value :: x
       real(c_double) :: fgsl_sf_hyperg_u_int
     end function fgsl_sf_hyperg_u_int
     function gsl_sf_hyperg_u_int_e(m, n, x, result) bind(c, name='gsl_sf_hyperg_U_int_e')
       import
       integer(c_int), value :: m, n
       real(c_double), value :: x
       type(gsl_sf_result) :: result
       integer(c_int) :: gsl_sf_hyperg_u_int_e
     end function gsl_sf_hyperg_u_int_e
     function gsl_sf_hyperg_u_int_e10_e(m, n, x, result) bind(c, name='gsl_sf_hyperg_U_int_e10_e')
       import
       integer(c_int), value :: m, n
       real(c_double), value :: x
       type(gsl_sf_result_e10) :: result
       integer(c_int) :: gsl_sf_hyperg_u_int_e10_e
     end function gsl_sf_hyperg_u_int_e10_e
     function fgsl_sf_hyperg_u(a, b, x) bind(c, name='gsl_sf_hyperg_U')
       import
       real(c_double), value :: a, b, x
       real(c_double) :: fgsl_sf_hyperg_u
     end function fgsl_sf_hyperg_u
     function gsl_sf_hyperg_u_e(a, b, x, result) bind(c, name='gsl_sf_hyperg_U_e')
       import
       real(c_double), value :: a, b, x
       type(gsl_sf_result) :: result
       integer(c_int) :: gsl_sf_hyperg_u_e
     end function gsl_sf_hyperg_u_e
     function gsl_sf_hyperg_u_e10_e(a, b, x, result) bind(c, name='gsl_sf_hyperg_U_e10_e')
       import
       real(c_double), value :: a, b, x
       type(gsl_sf_result_e10) :: result
       integer(c_int) :: gsl_sf_hyperg_u_e10_e
     end function gsl_sf_hyperg_u_e10_e
     function fgsl_sf_hyperg_2f1(a, b, c, x) bind(c, name='gsl_sf_hyperg_2F1')
       import
       real(c_double), value :: a, b, c, x
       real(c_double) :: fgsl_sf_hyperg_2f1
     end function fgsl_sf_hyperg_2f1
     function gsl_sf_hyperg_2f1_e(a, b, c, x, result) bind(c, name='gsl_sf_hyperg_2F1_e')
       import
       real(c_double), value :: a, b, c, x
       type(gsl_sf_result) :: result
       integer(c_int) :: gsl_sf_hyperg_2f1_e
     end function gsl_sf_hyperg_2f1_e
     function fgsl_sf_hyperg_2f1_conj(ar, ai, c, x) bind(c, name='gsl_sf_hyperg_2F1_conj')
       import
       real(c_double), value :: ar, ai, c, x
       real(c_double) :: fgsl_sf_hyperg_2f1_conj
     end function fgsl_sf_hyperg_2f1_conj
     function gsl_sf_hyperg_2f1_conj_e(ar, ai, c, x, result) &
          bind(c, name='gsl_sf_hyperg_2F1_conj_e')
       import
       real(c_double), value :: ar, ai, c, x
       type(gsl_sf_result) :: result
       integer(c_int) :: gsl_sf_hyperg_2f1_conj_e
     end function gsl_sf_hyperg_2f1_conj_e
     function fgsl_sf_hyperg_2f1_renorm(a, b, c, x) &
          bind(c, name='gsl_sf_hyperg_2F1_renorm')
       import
       real(c_double), value :: a, b, c, x
       real(c_double) :: fgsl_sf_hyperg_2f1_renorm
     end function fgsl_sf_hyperg_2f1_renorm
     function gsl_sf_hyperg_2f1_renorm_e(a, b, c, x, result) &
          bind(c, name='gsl_sf_hyperg_2F1_renorm_e')
       import
       real(c_double), value :: a, b, c, x
       type(gsl_sf_result) :: result
       integer(c_int) :: gsl_sf_hyperg_2f1_renorm_e
     end function gsl_sf_hyperg_2f1_renorm_e
     function fgsl_sf_hyperg_2f1_conj_renorm(ar, ai, c, x) &
          bind(c, name='gsl_sf_hyperg_2F1_conj_renorm')
       import
       real(c_double), value :: ar, ai, c, x
       real(c_double) :: fgsl_sf_hyperg_2f1_conj_renorm
     end function fgsl_sf_hyperg_2f1_conj_renorm
     function gsl_sf_hyperg_2f1_conj_renorm_e(ar, ai, c, x, result) &
          bind(c, name='gsl_sf_hyperg_2F1_conj_renorm_e')
       import
       real(c_double), value :: ar, ai, c, x
       type(gsl_sf_result) :: result
       integer(c_int) :: gsl_sf_hyperg_2f1_conj_renorm_e
     end function gsl_sf_hyperg_2f1_conj_renorm_e
     function fgsl_sf_hyperg_2f0(a, b, x) bind(c, name='gsl_sf_hyperg_2F0')
       import
       real(c_double), value :: a, b, x
       real(c_double) :: fgsl_sf_hyperg_2f0
     end function fgsl_sf_hyperg_2f0
     function gsl_sf_hyperg_2f0_e(a, b, x, result) bind(c, name='gsl_sf_hyperg_2F0_e')
       import
       real(c_double), value :: a, b, x
       type(gsl_sf_result) :: result
       integer(c_int) :: gsl_sf_hyperg_2f0_e
     end function gsl_sf_hyperg_2f0_e
     function fgsl_sf_laguerre_1(a, x) bind(c, name='gsl_sf_laguerre_1')
       import
       real(c_double), value :: a, x
       real(c_double) :: fgsl_sf_laguerre_1
     end function fgsl_sf_laguerre_1
     function gsl_sf_laguerre_1_e(a, x, result) bind(c)
       import
       real(c_double), value :: a, x
       type(gsl_sf_result) :: result
       integer(c_int) :: gsl_sf_laguerre_1_e
     end function gsl_sf_laguerre_1_e
     function fgsl_sf_laguerre_2(a, x) bind(c, name='gsl_sf_laguerre_2')
       import
       real(c_double), value :: a, x
       real(c_double) :: fgsl_sf_laguerre_2
     end function fgsl_sf_laguerre_2
     function gsl_sf_laguerre_2_e(a, x, result) bind(c)
       import
       real(c_double), value :: a, x
       type(gsl_sf_result) :: result
       integer(c_int) :: gsl_sf_laguerre_2_e
     end function gsl_sf_laguerre_2_e
     function fgsl_sf_laguerre_3(a, x) bind(c, name='gsl_sf_laguerre_3')
       import
       real(c_double), value :: a, x
       real(c_double) :: fgsl_sf_laguerre_3
     end function fgsl_sf_laguerre_3
     function gsl_sf_laguerre_3_e(a, x, result) bind(c)
       import
       real(c_double), value :: a, x
       type(gsl_sf_result) :: result
       integer(c_int) :: gsl_sf_laguerre_3_e
     end function gsl_sf_laguerre_3_e
     function fgsl_sf_laguerre_n(n, a, x) bind(c, name='gsl_sf_laguerre_n')
       import
       integer(c_int), value :: n
       real(c_double), value :: a, x
       real(c_double) :: fgsl_sf_laguerre_n
     end function fgsl_sf_laguerre_n
     function gsl_sf_laguerre_n_e(n, a, x, result) bind(c)
       import
       integer(c_int), value :: n
       real(c_double), value :: a, x
       type(gsl_sf_result) :: result
       integer(c_int) :: gsl_sf_laguerre_n_e
     end function gsl_sf_laguerre_n_e
     function fgsl_sf_lambert_w0(x) bind(c, name='gsl_sf_lambert_W0')
       import
       real(c_double), value :: x
       real(c_double) :: fgsl_sf_lambert_w0
     end function fgsl_sf_lambert_w0
     function gsl_sf_lambert_w0_e(x, result) bind(c, name='gsl_sf_lambert_W0_e')
       import
       real(c_double), value :: x
       type(gsl_sf_result) :: result
       integer(c_int) :: gsl_sf_lambert_w0_e
     end function gsl_sf_lambert_w0_e
     function fgsl_sf_lambert_wm1(x) bind(c, name='gsl_sf_lambert_Wm1')
       import
       real(c_double), value :: x
       real(c_double) :: fgsl_sf_lambert_wm1
     end function fgsl_sf_lambert_wm1
     function gsl_sf_lambert_wm1_e(x, result) bind(c, name='gsl_sf_lambert_Wm1_e')
       import
       real(c_double), value :: x
       type(gsl_sf_result) :: result
       integer(c_int) :: gsl_sf_lambert_wm1_e
     end function gsl_sf_lambert_wm1_e
     function fgsl_sf_legendre_p1(x) bind(c, name='gsl_sf_legendre_P1')
       import
       real(c_double), value :: x
       real(c_double) :: fgsl_sf_legendre_p1
     end function fgsl_sf_legendre_p1
     function gsl_sf_legendre_p1_e(x, result) bind(c, name='gsl_sf_legendre_P1_e')
       import
       real(c_double), value :: x
       type(gsl_sf_result) :: result
       integer(c_int) :: gsl_sf_legendre_p1_e
     end function gsl_sf_legendre_p1_e
     function fgsl_sf_legendre_p2(x) bind(c, name='gsl_sf_legendre_P2')
       import
       real(c_double), value :: x
       real(c_double) :: fgsl_sf_legendre_p2
     end function fgsl_sf_legendre_p2
     function gsl_sf_legendre_p2_e(x, result) bind(c, name='gsl_sf_legendre_P2_e')
       import
       real(c_double), value :: x
       type(gsl_sf_result) :: result
       integer(c_int) :: gsl_sf_legendre_p2_e
     end function gsl_sf_legendre_p2_e
     function fgsl_sf_legendre_p3(x) bind(c, name='gsl_sf_legendre_P3')
       import
       real(c_double), value :: x
       real(c_double) :: fgsl_sf_legendre_p3
     end function fgsl_sf_legendre_p3
     function gsl_sf_legendre_p3_e(x, result) bind(c, name='gsl_sf_legendre_P3_e')
       import
       real(c_double), value :: x
       type(gsl_sf_result) :: result
       integer(c_int) :: gsl_sf_legendre_p3_e
     end function gsl_sf_legendre_p3_e
     function fgsl_sf_legendre_pl(l, x) bind(c, name='gsl_sf_legendre_Pl')
       import
       integer(c_int), value :: l
       real(c_double), value :: x
       real(c_double) :: fgsl_sf_legendre_pl
     end function fgsl_sf_legendre_pl
     function gsl_sf_legendre_pl_e(l, x, result) bind(c, name='gsl_sf_legendre_Pl_e')
       import
       integer(c_int), value :: l
       real(c_double), value :: x
       type(gsl_sf_result) :: result
       integer(c_int) :: gsl_sf_legendre_pl_e
     end function gsl_sf_legendre_pl_e
     function gsl_sf_legendre_pl_array(lmax, x, res_arr) bind(c, name='gsl_sf_legendre_Pl_array')
       import
       integer(c_int), value :: lmax
       real(c_double), value :: x
       type(c_ptr), value :: res_arr
       integer(c_int) :: gsl_sf_legendre_pl_array
     end function gsl_sf_legendre_pl_array
     function gsl_sf_legendre_pl_deriv_array(lmax, x, res_arr, der_arr) &
          bind(c, name='gsl_sf_legendre_Pl_deriv_array')
       import
       integer(c_int), value :: lmax
       real(c_double), value :: x
       type(c_ptr), value :: res_arr, der_arr
       integer(c_int) :: gsl_sf_legendre_pl_deriv_array
     end function gsl_sf_legendre_pl_deriv_array
     function fgsl_sf_legendre_q0(x) bind(c, name='gsl_sf_legendre_Q0')
       import
       real(c_double), value :: x
       real(c_double) :: fgsl_sf_legendre_q0
     end function fgsl_sf_legendre_q0
     function gsl_sf_legendre_q0_e(x, result) bind(c, name='gsl_sf_legendre_Q0_e')
       import
       real(c_double), value :: x
       type(gsl_sf_result) :: result
       integer(c_int) :: gsl_sf_legendre_q0_e
     end function gsl_sf_legendre_q0_e
     function fgsl_sf_legendre_q1(x) bind(c, name='gsl_sf_legendre_Q1')
       import
       real(c_double), value :: x
       real(c_double) :: fgsl_sf_legendre_q1
     end function fgsl_sf_legendre_q1
     function gsl_sf_legendre_q1_e(x, result) bind(c, name='gsl_sf_legendre_Q1_e')
       import
       real(c_double), value :: x
       type(gsl_sf_result) :: result
       integer(c_int) :: gsl_sf_legendre_q1_e
     end function gsl_sf_legendre_q1_e
     function fgsl_sf_legendre_ql(l, x) bind(c, name='gsl_sf_legendre_Ql')
       import
       integer(c_int), value :: l
       real(c_double), value :: x
       real(c_double) :: fgsl_sf_legendre_ql
     end function fgsl_sf_legendre_ql
     function gsl_sf_legendre_ql_e(l, x, result) bind(c, name='gsl_sf_legendre_Ql_e')
       import
       integer(c_int), value :: l
       real(c_double), value :: x
       type(gsl_sf_result) :: result
       integer(c_int) :: gsl_sf_legendre_ql_e
     end function gsl_sf_legendre_ql_e
     function fgsl_sf_legendre_plm(l, m, x) bind(c, name='gsl_sf_legendre_Plm')
       import
       integer(c_int), value :: l, m
       real(c_double), value :: x
       real(c_double) :: fgsl_sf_legendre_plm
     end function fgsl_sf_legendre_plm
     function gsl_sf_legendre_plm_e(l, m, x, result) bind(c, name='gsl_sf_legendre_Plm_e')
       import
       integer(c_int), value :: l, m
       real(c_double), value :: x
       type(gsl_sf_result) :: result
       integer(c_int) :: gsl_sf_legendre_plm_e
     end function gsl_sf_legendre_plm_e
     function fgsl_sf_legendre_sphplm(l, m, x) bind(c, name='gsl_sf_legendre_sphPlm')
       import
       integer(c_int), value :: l, m
       real(c_double), value :: x
       real(c_double) :: fgsl_sf_legendre_sphplm
     end function fgsl_sf_legendre_sphplm
     function gsl_sf_legendre_sphplm_e(l, m, x, result) bind(c, name='gsl_sf_legendre_sphPlm_e')
       import
       integer(c_int), value :: l, m
       real(c_double), value :: x
       type(gsl_sf_result) :: result
       integer(c_int) :: gsl_sf_legendre_sphplm_e
     end function gsl_sf_legendre_sphplm_e
     function fgsl_sf_conicalp_half(lambda, x) bind(c, name='gsl_sf_conicalP_half')
       import
       real(c_double), value :: lambda, x
       real(c_double) :: fgsl_sf_conicalp_half
     end function fgsl_sf_conicalp_half
     function gsl_sf_conicalp_half_e(lambda, x, result) bind(c, name='gsl_sf_conicalP_half_e')
       import
       real(c_double), value :: lambda, x
       type(gsl_sf_result) :: result
       integer(c_int) :: gsl_sf_conicalp_half_e
     end function gsl_sf_conicalp_half_e
     function fgsl_sf_conicalp_mhalf(lambda, x) bind(c, name='gsl_sf_conicalP_mhalf')
       import
       real(c_double), value :: lambda, x
       real(c_double) :: fgsl_sf_conicalp_mhalf
     end function fgsl_sf_conicalp_mhalf
     function gsl_sf_conicalp_mhalf_e(lambda, x, result) bind(c, name='gsl_sf_conicalP_mhalf_e')
       import
       real(c_double), value :: lambda, x
       type(gsl_sf_result) :: result
       integer(c_int) :: gsl_sf_conicalp_mhalf_e
     end function gsl_sf_conicalp_mhalf_e
     function fgsl_sf_conicalp_0(lambda, x) bind(c, name='gsl_sf_conicalP_0')
       import
       real(c_double), value :: lambda, x
       real(c_double) :: fgsl_sf_conicalp_0
     end function fgsl_sf_conicalp_0
     function gsl_sf_conicalp_0_e(lambda, x, result) bind(c, name='gsl_sf_conicalP_0_e')
       import
       real(c_double), value :: lambda, x
       type(gsl_sf_result) :: result
       integer(c_int) :: gsl_sf_conicalp_0_e
     end function gsl_sf_conicalp_0_e
     function fgsl_sf_conicalp_1(lambda, x) bind(c, name='gsl_sf_conicalP_1')
       import
       real(c_double), value :: lambda, x
       real(c_double) :: fgsl_sf_conicalp_1
     end function fgsl_sf_conicalp_1
     function gsl_sf_conicalp_1_e(lambda, x, result) bind(c, name='gsl_sf_conicalP_1_e')
       import
       real(c_double), value :: lambda, x
       type(gsl_sf_result) :: result
       integer(c_int) :: gsl_sf_conicalp_1_e
     end function gsl_sf_conicalp_1_e
     function fgsl_sf_conicalp_sph_reg(l, lambda, x) &
          bind(c, name='gsl_sf_conicalP_sph_reg')
       import
       integer(c_int), value :: l
       real(c_double), value :: lambda, x
       real(c_double) :: fgsl_sf_conicalp_sph_reg
     end function fgsl_sf_conicalp_sph_reg
     function gsl_sf_conicalp_sph_reg_e(l, lambda, x, result) &
          bind(c, name='gsl_sf_conicalP_sph_reg_e')
       import
       integer(c_int), value :: l
       real(c_double), value :: lambda, x
       type(gsl_sf_result) :: result
       integer(c_int) :: gsl_sf_conicalp_sph_reg_e
     end function gsl_sf_conicalp_sph_reg_e
     function fgsl_sf_conicalp_cyl_reg(l, lambda, x) &
          bind(c, name='gsl_sf_conicalP_cyl_reg')
       import
       integer(c_int), value :: l
       real(c_double), value :: lambda, x
       real(c_double) :: fgsl_sf_conicalp_cyl_reg
     end function fgsl_sf_conicalp_cyl_reg
     function gsl_sf_conicalp_cyl_reg_e(l, lambda, x, result) &
          bind(c, name='gsl_sf_conicalP_cyl_reg_e')
       import
       integer(c_int), value :: l
       real(c_double), value :: lambda, x
       type(gsl_sf_result) :: result
       integer(c_int) :: gsl_sf_conicalp_cyl_reg_e
     end function gsl_sf_conicalp_cyl_reg_e
     function fgsl_sf_legendre_h3d_0(lambda, eta) bind(c, name='gsl_sf_legendre_H3d_0')
       import
       real(c_double), value :: lambda, eta
       real(c_double) :: fgsl_sf_legendre_h3d_0
     end function fgsl_sf_legendre_h3d_0
     function gsl_sf_legendre_h3d_0_e(lambda, eta, result) bind(c, name='gsl_sf_legendre_H3d_0_e')
       import
       real(c_double), value :: lambda, eta
       type(gsl_sf_result) :: result
       integer(c_int) :: gsl_sf_legendre_h3d_0_e
     end function gsl_sf_legendre_h3d_0_e
     function fgsl_sf_legendre_h3d_1(lambda, eta) bind(c, name='gsl_sf_legendre_H3d_1')
       import
       real(c_double), value :: lambda, eta
       real(c_double) :: fgsl_sf_legendre_h3d_1
     end function fgsl_sf_legendre_h3d_1
     function gsl_sf_legendre_h3d_1_e(lambda, eta, result) bind(c, name='gsl_sf_legendre_H3d_1_e')
       import
       real(c_double), value :: lambda, eta
       type(gsl_sf_result) :: result
       integer(c_int) :: gsl_sf_legendre_h3d_1_e
     end function gsl_sf_legendre_h3d_1_e
     function fgsl_sf_legendre_h3d(l, lambda, eta) bind(c, name='gsl_sf_legendre_H3d')
       import
       integer(c_int), value :: l
       real(c_double), value :: lambda, eta
       real(c_double) :: fgsl_sf_legendre_h3d
     end function fgsl_sf_legendre_h3d
     function gsl_sf_legendre_h3d_e(l, lambda, eta, result) bind(c, name='gsl_sf_legendre_H3d_e')
       import
       integer(c_int), value :: l
       real(c_double), value :: lambda, eta
       type(gsl_sf_result) :: result
       integer(c_int) :: gsl_sf_legendre_h3d_e
     end function gsl_sf_legendre_h3d_e
     function gsl_sf_legendre_h3d_array(lmax, lambda, eta, res_arr) &
          bind(c, name='gsl_sf_legendre_H3d_array')
       import
       integer(c_int), value :: lmax
       real(c_double), value :: lambda, eta
       type(c_ptr), value :: res_arr
       integer(c_int) :: gsl_sf_legendre_h3d_array
     end function gsl_sf_legendre_h3d_array
     function fgsl_sf_log(x) bind(c, name='gsl_sf_log')
       import
       real(c_double), value :: x
       real(c_double) :: fgsl_sf_log
     end function fgsl_sf_log
     function gsl_sf_log_e(x, result) bind(c)
       import
       real(c_double), value :: x
       type(gsl_sf_result) :: result
       integer(c_int) :: gsl_sf_log_e
     end function gsl_sf_log_e
     function fgsl_sf_log_abs(x) bind(c, name='gsl_sf_log_abs')
       import
       real(c_double), value :: x
       real(c_double) :: fgsl_sf_log_abs
     end function fgsl_sf_log_abs
     function gsl_sf_log_abs_e(x, result) bind(c)
       import
       real(c_double), value :: x
       type(gsl_sf_result) :: result
       integer(c_int) :: gsl_sf_log_abs_e
     end function gsl_sf_log_abs_e
     function gsl_sf_complex_log_e(zr, zi, lnr, theta) bind(c)
       import
       real(c_double), value :: zr, zi
       type(gsl_sf_result) :: lnr, theta
       integer(c_int) :: gsl_sf_complex_log_e
     end function gsl_sf_complex_log_e
     function fgsl_sf_log_1plusx(x) bind(c, name='gsl_sf_log_1plusx')
       import
       real(c_double), value :: x
       real(c_double) :: fgsl_sf_log_1plusx
     end function fgsl_sf_log_1plusx
     function gsl_sf_log_1plusx_e(x, result) bind(c)
       import
       real(c_double), value :: x
       type(gsl_sf_result) :: result
       integer(c_int) :: gsl_sf_log_1plusx_e
     end function gsl_sf_log_1plusx_e
     function fgsl_sf_log_1plusx_mx(x) bind(c, name='gsl_sf_log_1plusx_mx')
       import
       real(c_double), value :: x
       real(c_double) :: fgsl_sf_log_1plusx_mx
     end function fgsl_sf_log_1plusx_mx
     function gsl_sf_log_1plusx_mx_e(x, result) bind(c)
       import
       real(c_double), value :: x
       type(gsl_sf_result) :: result
       integer(c_int) :: gsl_sf_log_1plusx_mx_e
     end function gsl_sf_log_1plusx_mx_e
     function fgsl_sf_psi_int(n) bind(c, name='gsl_sf_psi_int')
       import
       integer(c_int), value :: n
       real(c_double) :: fgsl_sf_psi_int
     end function fgsl_sf_psi_int
     function gsl_sf_psi_int_e(n, result) bind(c)
       import
       integer(c_int), value :: n
       type(gsl_sf_result) :: result
       integer(c_int) :: gsl_sf_psi_int_e
     end function gsl_sf_psi_int_e
     function fgsl_sf_psi(x) bind(c, name='gsl_sf_psi')
       import
       real(c_double), value :: x
       real(c_double) :: fgsl_sf_psi
     end function fgsl_sf_psi
     function gsl_sf_psi_e(x, result) bind(c)
       import
       real(c_double), value :: x
       type(gsl_sf_result) :: result
       integer(c_int) :: gsl_sf_psi_e
     end function gsl_sf_psi_e
     function fgsl_sf_psi_1_int(n) bind(c, name='gsl_sf_psi_1_int')
       import
       integer(c_int), value :: n
       real(c_double) :: fgsl_sf_psi_1_int
     end function fgsl_sf_psi_1_int
     function gsl_sf_psi_1_int_e(n, result) bind(c)
       import
       integer(c_int), value :: n
       type(gsl_sf_result) :: result
       integer(c_int) :: gsl_sf_psi_1_int_e
     end function gsl_sf_psi_1_int_e
     function fgsl_sf_psi_1(x) bind(c, name='gsl_sf_psi_1')
       import
       real(c_double), value :: x
       real(c_double) :: fgsl_sf_psi_1
     end function fgsl_sf_psi_1
     function gsl_sf_psi_1_e(x, result) bind(c)
       import
       real(c_double), value :: x
       type(gsl_sf_result) :: result
       integer(c_int) :: gsl_sf_psi_1_e
     end function gsl_sf_psi_1_e
     function fgsl_sf_psi_n(m, x) bind(c, name='gsl_sf_psi_n')
       import
       integer(c_int), value :: m
       real(c_double), value :: x
       real(c_double) :: fgsl_sf_psi_n
     end function fgsl_sf_psi_n
     function gsl_sf_psi_n_e(m, x, result) bind(c)
       import
       integer(c_int), value :: m
       real(c_double), value :: x
       type(gsl_sf_result) :: result
       integer(c_int) :: gsl_sf_psi_n_e
     end function gsl_sf_psi_n_e
     function fgsl_sf_psi_1piy(x) bind(c, name='gsl_sf_psi_1piy')
       import
       real(c_double), value :: x
       real(c_double) :: fgsl_sf_psi_1piy
     end function fgsl_sf_psi_1piy
     function gsl_sf_psi_1piy_e(x, result) bind(c)
       import
       real(c_double), value :: x
       type(gsl_sf_result) :: result
       integer(c_int) :: gsl_sf_psi_1piy_e
     end function gsl_sf_psi_1piy_e
     function fgsl_sf_synchrotron_1(x) bind(c, name='gsl_sf_synchrotron_1')
       import
       real(c_double), value :: x
       real(c_double) :: fgsl_sf_synchrotron_1
     end function fgsl_sf_synchrotron_1
     function gsl_sf_synchrotron_1_e(x, result) bind(c)
       import
       real(c_double), value :: x
       type(gsl_sf_result) :: result
       integer(c_int) :: gsl_sf_synchrotron_1_e
     end function gsl_sf_synchrotron_1_e
     function fgsl_sf_synchrotron_2(x) bind(c, name='gsl_sf_synchrotron_2')
       import
       real(c_double), value :: x
       real(c_double) :: fgsl_sf_synchrotron_2
     end function fgsl_sf_synchrotron_2
     function gsl_sf_synchrotron_2_e(x, result) bind(c)
       import
       real(c_double), value :: x
       type(gsl_sf_result) :: result
       integer(c_int) :: gsl_sf_synchrotron_2_e
     end function gsl_sf_synchrotron_2_e
     function fgsl_sf_transport_2(x) bind(c, name='gsl_sf_transport_2')
       import
       real(c_double), value :: x
       real(c_double) :: fgsl_sf_transport_2
     end function fgsl_sf_transport_2
     function gsl_sf_transport_2_e(x, result) bind(c)
       import
       real(c_double), value :: x
       type(gsl_sf_result) :: result
       integer(c_int) :: gsl_sf_transport_2_e
     end function gsl_sf_transport_2_e
     function fgsl_sf_transport_3(x) bind(c, name='gsl_sf_transport_3')
       import
       real(c_double), value :: x
       real(c_double) :: fgsl_sf_transport_3
     end function fgsl_sf_transport_3
     function gsl_sf_transport_3_e(x, result) bind(c)
       import
       real(c_double), value :: x
       type(gsl_sf_result) :: result
       integer(c_int) :: gsl_sf_transport_3_e
     end function gsl_sf_transport_3_e
     function fgsl_sf_transport_4(x) bind(c, name='gsl_sf_transport_4')
       import
       real(c_double), value :: x
       real(c_double) :: fgsl_sf_transport_4
     end function fgsl_sf_transport_4
     function gsl_sf_transport_4_e(x, result) bind(c)
       import
       real(c_double), value :: x
       type(gsl_sf_result) :: result
       integer(c_int) :: gsl_sf_transport_4_e
     end function gsl_sf_transport_4_e
     function fgsl_sf_transport_5(x) bind(c, name='gsl_sf_transport_5')
       import
       real(c_double), value :: x
       real(c_double) :: fgsl_sf_transport_5
     end function fgsl_sf_transport_5
     function gsl_sf_transport_5_e(x, result) bind(c)
       import
       real(c_double), value :: x
       type(gsl_sf_result) :: result
       integer(c_int) :: gsl_sf_transport_5_e
     end function gsl_sf_transport_5_e
     function fgsl_sf_hypot(x, y) bind(c, name='gsl_sf_hypot')
       import
       real(c_double), value :: x, y
       real(c_double) :: fgsl_sf_hypot
     end function fgsl_sf_hypot
     function gsl_sf_hypot_e(x, y, result) bind(c)
       import
       real(c_double), value :: x, y
       type(gsl_sf_result) :: result
       integer(c_int) :: gsl_sf_hypot_e
     end function gsl_sf_hypot_e
     function fgsl_sf_sinc(x) bind(c, name='gsl_sf_sinc')
       import
       real(c_double), value :: x
       real(c_double) :: fgsl_sf_sinc
     end function fgsl_sf_sinc
     function gsl_sf_sinc_e(x, result) bind(c)
       import
       real(c_double), value :: x
       type(gsl_sf_result) :: result
       integer(c_int) :: gsl_sf_sinc_e
     end function gsl_sf_sinc_e
     function gsl_sf_complex_sin_e(zr, zi, szr, szi) bind(c)
       import
       real(c_double), value :: zr, zi
       type(gsl_sf_result) :: szr, szi
       integer(c_int) :: gsl_sf_complex_sin_e
     end function gsl_sf_complex_sin_e
     function gsl_sf_complex_cos_e(zr, zi, czr, czi) bind(c)
       import
       real(c_double), value :: zr, zi
       type(gsl_sf_result) :: czr, czi
       integer(c_int) :: gsl_sf_complex_cos_e
     end function gsl_sf_complex_cos_e
     function gsl_sf_complex_logsin_e(zr, zi, lszr, lszi) bind(c)
       import
       real(c_double), value :: zr, zi
       type(gsl_sf_result) :: lszr, lszi
       integer(c_int) :: gsl_sf_complex_logsin_e
     end function gsl_sf_complex_logsin_e
     function fgsl_sf_lnsinh(x) bind(c, name='gsl_sf_lnsinh')
       import
       real(c_double), value :: x
       real(c_double) :: fgsl_sf_lnsinh
     end function fgsl_sf_lnsinh
     function gsl_sf_lnsinh_e(x, result) bind(c)
       import
       real(c_double), value :: x
       type(gsl_sf_result) :: result
       integer(c_int) :: gsl_sf_lnsinh_e
     end function gsl_sf_lnsinh_e
     function fgsl_sf_lncosh(x) bind(c, name='gsl_sf_lncosh')
       import
       real(c_double), value :: x
       real(c_double) :: fgsl_sf_lncosh
     end function fgsl_sf_lncosh
     function gsl_sf_lncosh_e(x, result) bind(c)
       import
       real(c_double), value :: x
       type(gsl_sf_result) :: result
       integer(c_int) :: gsl_sf_lncosh_e
     end function gsl_sf_lncosh_e
     function gsl_sf_polar_to_rect(r, theta, x, y) bind(c)
       import
       real(c_double), value :: r, theta
       type(gsl_sf_result) :: x, y
       integer(c_int) :: gsl_sf_polar_to_rect
     end function gsl_sf_polar_to_rect
     function gsl_sf_rect_to_polar(x, y, r, theta) bind(c)
       import
       real(c_double), value :: x, y
       type(gsl_sf_result) :: r, theta
       integer(c_int) :: gsl_sf_rect_to_polar
     end function gsl_sf_rect_to_polar
     function fgsl_sf_angle_restrict_symm(theta) bind(c, &
          name='gsl_sf_angle_restrict_symm')
       import
       real(c_double), value :: theta
       real(c_double) :: fgsl_sf_angle_restrict_symm
     end function fgsl_sf_angle_restrict_symm
     function gsl_sf_angle_restrict_symm_e(theta) bind(c)
       import
       real(c_double), intent(inout) :: theta
       integer(c_int) :: gsl_sf_angle_restrict_symm_e
     end function gsl_sf_angle_restrict_symm_e
     function fgsl_sf_angle_restrict_pos(theta) bind(c, &
          name='gsl_sf_angle_restrict_pos')
       import
       real(c_double), value :: theta
       real(c_double) :: fgsl_sf_angle_restrict_pos
     end function fgsl_sf_angle_restrict_pos
     function gsl_sf_angle_restrict_pos_e(theta) bind(c)
       import
       real(c_double), intent(inout) :: theta
       integer(c_int) :: gsl_sf_angle_restrict_pos_e
     end function gsl_sf_angle_restrict_pos_e
     function gsl_sf_sin_err_e(x, dx, result) bind(c)
       import
       real(c_double), value :: x, dx
       type(gsl_sf_result) :: result
       integer(c_int) :: gsl_sf_sin_err_e
     end function gsl_sf_sin_err_e
     function gsl_sf_cos_err_e(x, dx, result) bind(c)
       import
       real(c_double), value :: x, dx
       type(gsl_sf_result) :: result
       integer(c_int) :: gsl_sf_cos_err_e
     end function gsl_sf_cos_err_e
     function fgsl_sf_zeta_int(n) bind(c, name='gsl_sf_zeta_int')
       import
       integer(c_int), value :: n
       real(c_double) :: fgsl_sf_zeta_int
     end function fgsl_sf_zeta_int
     function gsl_sf_zeta_int_e(n, result) bind(c)
       import
       integer(c_int), value :: n
       type(gsl_sf_result) :: result
       integer(c_int) :: gsl_sf_zeta_int_e
     end function gsl_sf_zeta_int_e
     function fgsl_sf_zeta(x) bind(c, name='gsl_sf_zeta')
       import
       real(c_double), value :: x
       real(c_double) :: fgsl_sf_zeta
     end function fgsl_sf_zeta
     function gsl_sf_zeta_e(x, result) bind(c)
       import
       real(c_double), value :: x
       type(gsl_sf_result) :: result
       integer(c_int) :: gsl_sf_zeta_e
     end function gsl_sf_zeta_e
     function fgsl_sf_zetam1_int(n) bind(c, name='gsl_sf_zetam1_int')
       import
       integer(c_int), value :: n
       real(c_double) :: fgsl_sf_zetam1_int
     end function fgsl_sf_zetam1_int
     function gsl_sf_zetam1_int_e(n, result) bind(c)
       import
       integer(c_int), value :: n
       type(gsl_sf_result) :: result
       integer(c_int) :: gsl_sf_zetam1_int_e
     end function gsl_sf_zetam1_int_e
     function fgsl_sf_zetam1(x) bind(c, name='gsl_sf_zetam1')
       import
       real(c_double), value :: x
       real(c_double) :: fgsl_sf_zetam1
     end function fgsl_sf_zetam1
     function gsl_sf_zetam1_e(x, result) bind(c)
       import
       real(c_double), value :: x
       type(gsl_sf_result) :: result
       integer(c_int) :: gsl_sf_zetam1_e
     end function gsl_sf_zetam1_e
     function fgsl_sf_hzeta(s, q) bind(c, name='gsl_sf_hzeta')
       import
       real(c_double), value :: s, q
       real(c_double) :: fgsl_sf_hzeta
     end function fgsl_sf_hzeta
     function gsl_sf_hzeta_e(s, q, result) bind(c)
       import
       real(c_double), value :: s, q
       type(gsl_sf_result) :: result
       integer(c_int) :: gsl_sf_hzeta_e
     end function gsl_sf_hzeta_e
     function fgsl_sf_eta_int(n) bind(c, name='gsl_sf_eta_int')
       import
       integer(c_int), value :: n
       real(c_double) :: fgsl_sf_eta_int
     end function fgsl_sf_eta_int
     function gsl_sf_eta_int_e(n, result) bind(c)
       import
       integer(c_int), value :: n
       type(gsl_sf_result) :: result
       integer(c_int) :: gsl_sf_eta_int_e
     end function gsl_sf_eta_int_e
     function fgsl_sf_eta(x) bind(c, name='gsl_sf_eta')
       import
       real(c_double), value :: x
       real(c_double) :: fgsl_sf_eta
     end function fgsl_sf_eta
     function gsl_sf_eta_e(x, result) bind(c)
       import
       real(c_double), value :: x
       type(gsl_sf_result) :: result
       integer(c_int) :: gsl_sf_eta_e
     end function gsl_sf_eta_e
     function gsl_sf_legendre_array(norm, lmax, x, result_array) bind(c)
       import :: c_int, c_size_t, c_double, c_ptr
       integer(c_int), value :: norm
       integer(c_size_t), value :: lmax
       real(c_double), value :: x
       type(c_ptr), value :: result_array
       integer(c_int) :: gsl_sf_legendre_array
     end function gsl_sf_legendre_array
     function gsl_sf_legendre_array_e(norm, lmax, x, csphase, result_array) bind(c)
       import :: c_int, c_size_t, c_double, c_ptr
       integer(c_int), value :: norm
       integer(c_size_t), value :: lmax
       real(c_double), value :: x, csphase
       type(c_ptr), value :: result_array
       integer(c_int) :: gsl_sf_legendre_array_e
     end function gsl_sf_legendre_array_e
     function gsl_sf_legendre_deriv_array(norm, lmax, x, result_array, &
       result_deriv_array) bind(c)
       import :: c_int, c_size_t, c_double, c_ptr
       integer(c_int), value :: norm
       integer(c_size_t), value :: lmax
       real(c_double), value :: x
       type(c_ptr), value :: result_array, result_deriv_array
       integer(c_int) :: gsl_sf_legendre_deriv_array
     end function gsl_sf_legendre_deriv_array
     function gsl_sf_legendre_deriv_array_e(norm, lmax, x, csphase, &
       result_array, result_deriv_array) bind(c)
       import :: c_int, c_size_t, c_double, c_ptr
       integer(c_int), value :: norm
       integer(c_size_t), value :: lmax
       real(c_double), value :: x, csphase
       type(c_ptr), value :: result_array, result_deriv_array
       integer(c_int) :: gsl_sf_legendre_deriv_array_e
     end function gsl_sf_legendre_deriv_array_e
     function gsl_sf_legendre_deriv_alt_array(norm, lmax, x, result_array, &
       result_deriv_array) bind(c)
       import :: c_int, c_size_t, c_double, c_ptr
       integer(c_int), value :: norm
       integer(c_size_t), value :: lmax
       real(c_double), value :: x
       type(c_ptr), value :: result_array, result_deriv_array
       integer(c_int) :: gsl_sf_legendre_deriv_alt_array
     end function gsl_sf_legendre_deriv_alt_array
     function gsl_sf_legendre_deriv_alt_array_e(norm, lmax, x, csphase, &
       result_array, result_deriv_array) bind(c)
       import :: c_int, c_size_t, c_double, c_ptr
       integer(c_int), value :: norm
       integer(c_size_t), value :: lmax
       real(c_double), value :: x, csphase
       type(c_ptr), value :: result_array, result_deriv_array
       integer(c_int) :: gsl_sf_legendre_deriv_alt_array_e
     end function gsl_sf_legendre_deriv_alt_array_e
     function gsl_sf_legendre_deriv2_array(norm, lmax, x, result_array, &
       result_deriv_array, result_deriv2_array) bind(c)
       import :: c_int, c_size_t, c_double, c_ptr
       integer(c_int), value :: norm
       integer(c_size_t), value :: lmax
       real(c_double), value :: x
       type(c_ptr), value :: result_array, result_deriv_array, result_deriv2_array
       integer(c_int) :: gsl_sf_legendre_deriv2_array
     end function gsl_sf_legendre_deriv2_array
     function gsl_sf_legendre_deriv2_array_e(norm, lmax, x, csphase, &
       result_array, result_deriv_array, result_deriv2_array) bind(c)
       import :: c_int, c_size_t, c_double, c_ptr
       integer(c_int), value :: norm
       integer(c_size_t), value :: lmax
       real(c_double), value :: x, csphase
       type(c_ptr), value :: result_array, result_deriv_array, result_deriv2_array
       integer(c_int) :: gsl_sf_legendre_deriv2_array_e
     end function gsl_sf_legendre_deriv2_array_e
     function gsl_sf_legendre_deriv2_alt_array(norm, lmax, x, result_array,&
        result_deriv_array, result_deriv2_array) bind(c)
       import :: c_int, c_size_t, c_double, c_ptr
       integer(c_int), value :: norm
       integer(c_size_t), value :: lmax
       real(c_double), value :: x
       type(c_ptr), value :: result_array, result_deriv_array, result_deriv2_array
       integer(c_int) :: gsl_sf_legendre_deriv2_alt_array
     end function gsl_sf_legendre_deriv2_alt_array
     function gsl_sf_legendre_deriv2_alt_array_e(norm, lmax, x, csphase, &
       result_array, result_deriv_array, result_deriv2_array) bind(c)
       import :: c_int, c_size_t, c_double, c_ptr
       integer(c_int), value :: norm
       integer(c_size_t), value :: lmax
       real(c_double), value :: x, csphase
       type(c_ptr), value :: result_array, result_deriv_array, result_deriv2_array
       integer(c_int) :: gsl_sf_legendre_deriv2_alt_array_e
     end function gsl_sf_legendre_deriv2_alt_array_e
     function fgsl_sf_legendre_array_n(lmax) bind(c, name='gsl_sf_legendre_array_n')
       import :: c_size_t
       integer(c_size_t), value :: lmax
       integer(c_size_t) :: fgsl_sf_legendre_array_n
     end function fgsl_sf_legendre_array_n
     function fgsl_sf_legendre_array_index(l, m) &
          bind(c, name='gsl_sf_legendre_array_index')
       import :: c_size_t
       integer(c_size_t), value :: l, m
       integer(c_size_t) :: fgsl_sf_legendre_array_index
     end function fgsl_sf_legendre_array_index
     function fgsl_sf_legendre_nlm(lmax) bind(c, name='gsl_sf_legendre_nlm')
       import :: c_size_t
       integer(c_size_t), value :: lmax
       integer(c_size_t) :: fgsl_sf_legendre_nlm
     end function fgsl_sf_legendre_nlm
     function gsl_sf_mathieu_a_array(order_min, order_max, qq, work, result_array) bind(c)
       import :: c_int, c_double, c_ptr
       integer(c_int), value :: order_min, order_max
       real(c_double), value :: qq
       type(c_ptr), value :: work, result_array
       integer(c_int) :: gsl_sf_mathieu_a_array
     end function gsl_sf_mathieu_a_array
     function gsl_sf_mathieu_b_array(order_min, order_max, qq, work, result_array) bind(c)
       import :: c_int, c_double, c_ptr
       integer(c_int), value :: order_min, order_max
       real(c_double), value :: qq
       type(c_ptr), value :: work, result_array
       integer(c_int) :: gsl_sf_mathieu_b_array
     end function gsl_sf_mathieu_b_array
     function gsl_sf_mathieu_a_e(order, qq, result) bind(c)
       import :: c_int, c_double, c_ptr
       integer(c_int), value :: order
       real(c_double), value :: qq
       type(c_ptr), value :: result
       integer(c_int) :: gsl_sf_mathieu_a_e
     end function gsl_sf_mathieu_a_e
     function fgsl_sf_mathieu_a(order, qq) bind(c, name='gsl_sf_mathieu_a')
       import :: c_int, c_double
       integer(c_int), value :: order
       real(c_double), value :: qq
       real(c_double) :: fgsl_sf_mathieu_a
     end function fgsl_sf_mathieu_a
     function gsl_sf_mathieu_b_e(order, qq, result) bind(c)
       import :: c_int, c_double, c_ptr
       integer(c_int), value :: order
       real(c_double), value :: qq
       type(c_ptr), value :: result
       integer(c_int) :: gsl_sf_mathieu_b_e
     end function gsl_sf_mathieu_b_e
     function fgsl_sf_mathieu_b(order, qq) bind(c, name='gsl_sf_mathieu_b')
       import :: c_int, c_double
       integer(c_int), value :: order
       real(c_double), value :: qq
       real(c_double) :: fgsl_sf_mathieu_b
     end function fgsl_sf_mathieu_b
     function fgsl_sf_mathieu_a_coeff(order, qq, aa, coeff) &
          bind(c, name='gsl_sf_mathieu_a_coeff')
       import :: c_int, c_double, c_ptr
       integer(c_int), value :: order
       real(c_double), value :: qq, aa
       real(c_double), intent(inout), dimension(*) :: coeff
       integer(c_int) :: fgsl_sf_mathieu_a_coeff
     end function fgsl_sf_mathieu_a_coeff
     function fgsl_sf_mathieu_b_coeff(order, qq, aa, coeff) &
          bind(c, name='gsl_sf_mathieu_b_coeff')
       import :: c_int, c_double, c_ptr
       integer(c_int), value :: order
       real(c_double), value :: qq, aa
       real(c_double), intent(inout), dimension(*) :: coeff
       integer(c_int) :: fgsl_sf_mathieu_b_coeff
     end function fgsl_sf_mathieu_b_coeff
     function gsl_sf_mathieu_alloc(nn, qq) bind(c)
       import :: c_size_t, c_double, c_ptr
       integer(c_size_t), value :: nn
       real(c_double), value :: qq
       type(c_ptr) :: gsl_sf_mathieu_alloc
     end function gsl_sf_mathieu_alloc
     subroutine gsl_sf_mathieu_free(workspace) bind(c)
       import :: c_ptr
       type(c_ptr), value :: workspace
     end subroutine gsl_sf_mathieu_free
     function gsl_sf_mathieu_ce_e(order, qq, zz, result) bind(c)
       import :: c_int, c_double, c_ptr
       integer(c_int), value :: order
       real(c_double), value :: qq, zz
       type(c_ptr), value :: result
       integer(c_int) :: gsl_sf_mathieu_ce_e
     end function gsl_sf_mathieu_ce_e
     function fgsl_sf_mathieu_ce(order, qq, zz) bind(c, name='gsl_sf_mathieu_ce')
       import :: c_int, c_double, c_ptr
       integer(c_int), value :: order
       real(c_double), value :: qq, zz
       real(c_double) :: fgsl_sf_mathieu_ce
     end function fgsl_sf_mathieu_ce
     function gsl_sf_mathieu_se_e(order, qq, zz, result) bind(c)
       import :: c_int, c_double, c_ptr
       integer(c_int), value :: order
       real(c_double), value :: qq, zz
       type(c_ptr), value :: result
       integer(c_int) :: gsl_sf_mathieu_se_e
     end function gsl_sf_mathieu_se_e
     function fgsl_sf_mathieu_se(order, qq, zz) bind(c, name='gsl_sf_mathieu_se')
       import :: c_int, c_double, c_ptr
       integer(c_int), value :: order
       real(c_double), value :: qq, zz
       real(c_double) :: fgsl_sf_mathieu_se
     end function fgsl_sf_mathieu_se
     function gsl_sf_mathieu_ce_array(nmin, nmax, qq, zz, work, result_array) bind(c)
       import :: c_int, c_double, c_ptr
       integer(c_int), value :: nmin, nmax
       real(c_double), value :: qq, zz
       type(c_ptr), value :: work, result_array
       integer(c_int) :: gsl_sf_mathieu_ce_array
     end function gsl_sf_mathieu_ce_array
     function gsl_sf_mathieu_se_array(nmin, nmax, qq, zz, work, result_array) bind(c)
       import :: c_int, c_double, c_ptr
       integer(c_int), value :: nmin, nmax
       real(c_double), value :: qq, zz
       type(c_ptr), value :: work, result_array
       integer(c_int) :: gsl_sf_mathieu_se_array
     end function gsl_sf_mathieu_se_array
     function gsl_sf_mathieu_mc_e(kind, order, qq, zz, result) &
       bind(c, name='gsl_sf_mathieu_Mc_e')
       import :: c_int, c_double, c_ptr
       integer(c_int), value :: kind, order
       real(c_double), value :: qq, zz
       type(c_ptr), value :: result
       integer(c_int) :: gsl_sf_mathieu_mc_e
     end function gsl_sf_mathieu_mc_e
     function fgsl_sf_mathieu_mc(kind, order, qq, zz) &
       bind(c, name='gsl_sf_mathieu_Mc')
       import :: c_int, c_double, c_ptr
       integer(c_int), value :: kind, order
       real(c_double), value :: qq, zz
       real(c_double) :: fgsl_sf_mathieu_mc
     end function fgsl_sf_mathieu_mc
     function gsl_sf_mathieu_ms_e(kind, order, qq, zz, result) &
       bind(c, name='gsl_sf_mathieu_Ms_e')
       import :: c_int, c_double, c_ptr
       integer(c_int), value :: kind, order
       real(c_double), value :: qq, zz
       type(c_ptr), value :: result
       integer(c_int) :: gsl_sf_mathieu_ms_e
     end function gsl_sf_mathieu_ms_e
     function fgsl_sf_mathieu_ms(kind, order, qq, zz) &
       bind(c, name='gsl_sf_mathieu_Ms')
       import :: c_int, c_double, c_ptr
       integer(c_int), value :: kind, order
       real(c_double), value :: qq, zz
       real(c_double) :: fgsl_sf_mathieu_ms
     end function fgsl_sf_mathieu_ms
     function gsl_sf_mathieu_mc_array(kind, nmin, nmax, qq, zz, work, result_array) &
       bind(c, name='gsl_sf_mathieu_Mc_array')
       import :: c_int, c_double, c_ptr
       integer(c_int), value :: kind, nmin, nmax
       real(c_double), value :: qq, zz
       type(c_ptr), value :: work, result_array
       integer(c_int) :: gsl_sf_mathieu_mc_array
     end function gsl_sf_mathieu_mc_array
     function gsl_sf_mathieu_ms_array(kind, nmin, nmax, qq, zz, work, result_array) &
       bind(c, name='gsl_sf_mathieu_Ms_array')
       import :: c_int, c_double, c_ptr
       integer(c_int), value :: kind, nmin, nmax
       real(c_double), value :: qq, zz
       type(c_ptr), value :: work, result_array
       integer(c_int) :: gsl_sf_mathieu_ms_array
     end function gsl_sf_mathieu_ms_array
