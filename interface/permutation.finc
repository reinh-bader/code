!-*-f90-*-
!
! Interfaces: Permutations, Combinations and Multisets
!

!
!
!
  function gsl_combination_alloc(n, k) bind(c)
    import
    integer(c_size_t), value :: n, k
    type(c_ptr) :: gsl_combination_alloc
  end function gsl_combination_alloc
  function gsl_combination_calloc(n, k) bind(c)
    import
    integer(c_size_t), value :: n, k
    type(c_ptr) :: gsl_combination_calloc
  end function gsl_combination_calloc
  subroutine gsl_combination_init_first(c) bind(c)
    import
    type(c_ptr), value :: c
  end subroutine gsl_combination_init_first
  subroutine gsl_combination_init_last(c) bind(c)
    import
    type(c_ptr), value :: c
  end subroutine gsl_combination_init_last
  subroutine gsl_combination_free(c) bind(c)
    import
    type(c_ptr), value :: c
  end subroutine gsl_combination_free
  function gsl_combination_memcpy(dest, src) bind(c)
    import
    type(c_ptr), value :: dest
    type(c_ptr), value :: src
    integer(c_int) :: gsl_combination_memcpy
  end function gsl_combination_memcpy
  function gsl_combination_get(c, i) bind(c)
    import
    type(c_ptr), value :: c
    integer(c_size_t), value :: i
    integer(c_size_t) :: gsl_combination_get
  end function gsl_combination_get
  function gsl_combination_n(c) bind(c)
    import
    type(c_ptr), value :: c
    integer(c_size_t) :: gsl_combination_n
  end function gsl_combination_n
  function gsl_combination_k(c) bind(c)
    import
    type(c_ptr), value :: c
    integer(c_size_t) :: gsl_combination_k
  end function gsl_combination_k
  function gsl_combination_data(c) bind(c)
    import
    type(c_ptr), value :: c
    type(c_ptr) :: gsl_combination_data
  end function gsl_combination_data
  function gsl_combination_valid(c) bind(c)
    import
    type(c_ptr), value :: c
    integer(c_int) :: gsl_combination_valid
  end function gsl_combination_valid
  function gsl_combination_next(c) bind(c)
    import
    type(c_ptr), value :: c
    integer(c_int) :: gsl_combination_next
  end function gsl_combination_next
  function gsl_combination_prev(c) bind(c)
    import
    type(c_ptr), value :: c
    integer(c_int) :: gsl_combination_prev
  end function gsl_combination_prev
  function gsl_combination_fwrite(stream, c) bind(c)
    import :: c_ptr, c_int
    type(c_ptr), value :: stream, c
    integer(c_int) :: gsl_combination_fwrite
  end function gsl_combination_fwrite
  function gsl_combination_fread(stream, c) bind(c)
    import :: c_ptr, c_int
    type(c_ptr), value :: stream, c
    integer(c_int) :: gsl_combination_fread
  end function gsl_combination_fread
  function gsl_combination_fprintf(stream, c, format) bind(c)
    import :: c_ptr, c_int, c_char
    type(c_ptr), value :: stream, c
    character(kind=c_char) :: format
    integer(c_int) :: gsl_combination_fprintf
  end function gsl_combination_fprintf
  function gsl_combination_fscanf(stream, c) bind(c)
    import :: c_ptr, c_int
    type(c_ptr), value :: stream, c
    integer(c_int) :: gsl_combination_fscanf
  end function gsl_combination_fscanf
!
!
!
  function gsl_multiset_alloc(n, k) bind(c)
    import
    integer(c_size_t), value :: n, k
    type(c_ptr) :: gsl_multiset_alloc
  end function gsl_multiset_alloc
  function gsl_multiset_calloc(n, k) bind(c)
    import
    integer(c_size_t), value :: n, k
    type(c_ptr) :: gsl_multiset_calloc
  end function gsl_multiset_calloc
  subroutine gsl_multiset_init_first(c) bind(c)
    import
    type(c_ptr), value :: c
  end subroutine gsl_multiset_init_first
  subroutine gsl_multiset_init_last(c) bind(c)
    import
    type(c_ptr), value :: c
  end subroutine gsl_multiset_init_last
  subroutine gsl_multiset_free(c) bind(c)
    import
    type(c_ptr), value :: c
  end subroutine gsl_multiset_free
  function gsl_multiset_memcpy(dest, src) bind(c)
    import
    type(c_ptr), value :: dest
    type(c_ptr), value :: src
    integer(c_int) :: gsl_multiset_memcpy
  end function gsl_multiset_memcpy
  function gsl_multiset_get(c, i) bind(c)
    import
    type(c_ptr), value :: c
    integer(c_size_t), value :: i
    integer(c_size_t) :: gsl_multiset_get
  end function gsl_multiset_get
  function gsl_multiset_n(c) bind(c)
    import
    type(c_ptr), value :: c
    integer(c_size_t) :: gsl_multiset_n
  end function gsl_multiset_n
  function gsl_multiset_k(c) bind(c)
    import
    type(c_ptr), value :: c
    integer(c_size_t) :: gsl_multiset_k
  end function gsl_multiset_k
  function gsl_multiset_data(c) bind(c)
    import
    type(c_ptr), value :: c
    type(c_ptr) :: gsl_multiset_data
  end function gsl_multiset_data
  function gsl_multiset_valid(c) bind(c)
    import
    type(c_ptr), value :: c
    integer(c_int) :: gsl_multiset_valid
  end function gsl_multiset_valid
  function gsl_multiset_next(c) bind(c)
    import
    type(c_ptr), value :: c
    integer(c_int) :: gsl_multiset_next
  end function gsl_multiset_next
  function gsl_multiset_prev(c) bind(c)
    import
    type(c_ptr), value :: c
    integer(c_int) :: gsl_multiset_prev
  end function gsl_multiset_prev
  function gsl_multiset_fwrite(stream, c) bind(c)
    import :: c_ptr, c_int
    type(c_ptr), value :: stream, c
    integer(c_int) :: gsl_multiset_fwrite
  end function gsl_multiset_fwrite
  function gsl_multiset_fread(stream, c) bind(c)
    import :: c_ptr, c_int
    type(c_ptr), value :: stream, c
    integer(c_int) :: gsl_multiset_fread
  end function gsl_multiset_fread
  function gsl_multiset_fprintf(stream, c, format) bind(c)
    import :: c_ptr, c_int, c_char
    type(c_ptr), value :: stream, c
    character(kind=c_char) :: format
    integer(c_int) :: gsl_multiset_fprintf
  end function gsl_multiset_fprintf
  function gsl_multiset_fscanf(stream, c) bind(c)
    import :: c_ptr, c_int
    type(c_ptr), value :: stream, c
    integer(c_int) :: gsl_multiset_fscanf
  end function gsl_multiset_fscanf

!
!
!

  function gsl_aux_sizeof_combination() bind(c)
    import :: c_size_t
    integer(c_size_t) :: gsl_aux_sizeof_combination
  end function gsl_aux_sizeof_combination
  function gsl_aux_sizeof_multiset() bind(c)
    import :: c_size_t
    integer(c_size_t) :: gsl_aux_sizeof_multiset
  end function gsl_aux_sizeof_multiset
